@startuml activity-diagram
!theme plain
skinparam activity {
    BackgroundColor lightblue
    BorderColor darkblue
    FontSize 11
}

title March of the Legion - Enhanced Execution Flow

start

note right
    **Enhanced Command Format:**
    java -jar legion.jar a=i u=2,1,1,1,3 t=c o=s f=8

    **Parameters:**
    • a = algorithm (i=insertion, q=quick, c=counting, r=radix)
    • u = unit distribution (5 comma-separated values)
    • t = display type (c=character, n=numeric)
    • o = orientation (n=north, s=south, e=east, w=west)
    • f = battlefield size (5-1000, default=6)
end note

:User executes application\nwith command line parameters;

:Parse and validate command line arguments\n(a, u, t, o, f);

if (All parameters valid?) then (yes)
    :Extract algorithm type;
    :Extract unit distribution array;
    :Extract display type;
    :Extract formation orientation;
    :Extract battlefield size (default 6);
else (no)
    :Display comprehensive error message\nwith usage instructions;
    stop
endif

:Create SortingStrategy instance\n(InsertionSort for 'a=i');

:Calculate total troop count;

:Validate total units <= battlefield size²;

if (Units fit battlefield?) then (yes)
    :Continue execution;
else (no)
    :Display error: "Total units exceed battlefield capacity";
    stop
endif

:Display program configuration\n(Algorithm, Type, Orientation, Troops, Battlefield);

:Create Battlefield with specified size;

:Generate units with random display values\nwithin type-specific ranges;

:Place units randomly on battlefield;

:Render and display initial formation\n(ASCII grid with * for empty spaces);

partition "Insertion Sort Algorithm" {
    :Initialize sorting process;

    repeat
        :Select next unit to insert;
        :Find correct position based on military rank;
        :Shift higher-ranked units;
        :Insert unit in correct position;
    repeat while (More units to sort?)

    :Units sorted by military rank\n(0=Commander to 4=Infantry);
}

note left
    **Military Hierarchy with Ranges:**
    Rank 0: Commander (a-j / 1-10)
    Rank 1: Medic (k-t / 11-20)
    Rank 2: Tank (u-z,A-J / 21-30)
    Rank 3: Sniper (u-z,A-J / 31-40)
    Rank 4: Infantry (O-X / 41-50)
end note

:Clear battlefield grid;

switch (Formation orientation)
    case (o = "s")
        :Place units in South formation\n(column-wise from bottom-left);
    case (o = "n")
        :Place units in North formation\n(column-wise from top-left);
    case (o = "e")
        :Place units in East formation\n(row-wise from right);
    case (o = "w")
        :Place units in West formation\n(row-wise from left);

:Render and display final formation\n(ASCII grid showing sorted arrangement);

:Program execution complete;

note right
    **Enhanced Features:**
    • Configurable battlefield size (5-1000)
    • Four formation orientations
    • Randomized display values
    • Comprehensive validation
    • Prepared for additional algorithms
end note

stop

@enduml